{"version":3,"file":"polyfills.js","sources":["../src/timers.js","../src/tcp.js","../src/weblit-js/libs/bintools.js","../src/weblit-js/libs/assert.js","../src/weblit-js/libs/http-codec.js","../src/weblit-js/libs/gen-channel.js","../src/fetch-http.js","../src/weblit-js/libs/mime.js","../src/fetch-file.js","../src/headers.js","../src/fetch.js","../src/index.js","../src/polyfills.js"],"sourcesContent":["/// <reference path=\"../lib.uv.d.ts\"/>\nimport { Timer, Check } from 'uv';\n\n/**\n * Sets a timer which executes a function or specified piece of code once the timer expires.\n * @param {function} fn - A function to be executed after the timer expires.\n * @param {number} delay - The time, in milliseconds, the timer should wait before the specified function or code is executed.\n * @param  {...any} args - Additional parameters which are passed through to the function once the timer expires.\n * @returns {Timer}\n */\nexport function setTimeout (fn, delay = 0, ...args) {\n  let timer = new Timer();\n  timer.start(() => {\n    timer.close();\n    fn(...args);\n  }, delay, 0);\n  return timer;\n}\n\n/**\n * Cancels a timeout previously established by calling setTimeout().\n * @param {Timer} timer - The identifier of the timeout you want to cancel.\n */\nexport function clearTimeout (timer) {\n  timer.close();\n}\n\n/**\n * Repeatedly calls a function or executes a code snippet, with a fixed time delay between each call.\n * @param {function} fn - A function to be executed every delay milliseconds.\n * @param {number} delay - The time, in milliseconds, the timer should delay in between executions of the specified function or code\n * @param  {...any} args - Additional parameters which are passed through to the function once the timer expires.\n * @returns {Timer}\n */\nexport function setInterval (fn, delay, ...args) {\n  if (delay < 10) {\n    delay = 10;\n  }\n  let timer = new Timer();\n  timer.start(() => {\n    fn(...args);\n  }, delay, delay);\n  return timer;\n}\n\n/**\n * Cancels an interval previously established by calling setInterval().\n * @param {Timer} timer - The identifier of the interval you want to cancel.\n */\nexport function clearInterval (timer) {\n  timer.close();\n}\n\nlet check;\nlet checkQueue = [];\n\n/**\n * This method is used to defer running some code till after the current JS stack.\n * Unlike using promises, this is lighter weight and doesn't swallow errors.\n * @param {function} fn - the function you wish to call later.\n * @param  {...any} args - Additional parameters which are passed through to the function when called.\n * @returns {any} - the ID used for clearing the immediate.\n */\nexport function setImmediate (fn, ...args) {\n  if (!check) {\n    check = new Check();\n    check.start(onCheck);\n  }\n  let id = () => fn(...args);\n  checkQueue.push(id);\n  return id;\n}\n\n/**\n * Clear the immediate actions, just like window.clearTimeout for window.setTimeout.\n * @param {any} id  - the ID returned from setImmediate\n */\nexport function clearImmediate (id) {\n  checkQueue.splice(checkQueue.indexOf(id), 1);\n}\n\nfunction onCheck () {\n  let errors = [];\n  while (checkQueue.length) {\n    let tasks = checkQueue;\n    checkQueue = [];\n    for (let fn of tasks) {\n      try {\n        fn();\n      } catch (err) {\n        errors.push(err);\n      }\n    }\n  }\n  check.stop();\n  check.close();\n  check = null;\n}\n","/// <reference path=\"../lib.uv.d.ts\"/>\nimport { Getaddrinfo, getaddrinfo, Connect, Tcp } from 'uv';\n\nfunction makeCallback () {\n  let callback, promise;\n  promise = new Promise((resolve, reject) => {\n    callback = (err, val) => err ? reject(err) : resolve(val);\n  });\n  callback.promise = promise;\n  return callback;\n}\n\nexport async function connect (host, service) {\n  // Resolve IP address and TCP port\n  let cb = makeCallback();\n  getaddrinfo(new Getaddrinfo(), cb, host, '' + service);\n  let [{ ip, port }] = await cb.promise;\n\n  // Connect to server\n  let socket = new Tcp();\n  cb = makeCallback();\n  socket.connect(new Connect(), ip, port, cb);\n  await cb.promise;\n\n  return socket;\n}\n","\n// TYPES:\n//   bin - a Uint8Array in browser or node Buffer containing binary data.\n//   str - a normal unicode string.\n//   raw - a string where each character's charCode is a byte value. (utf-8)\n//   hex - a string holding binary data as lowercase hexadecimal.\n//   b64 - a string holding binary data in base64 encoding.\n\n/**\n * @param {any} bin\n * @returns {boolean}\n */\nexport function isBin (bin) {\n  return bin instanceof Uint8Array\n}\n\n/**\n * @param {string} raw\n * @param {number} start\n * @param {number} end\n * @returns {Uint8Array}\n */\nexport function rawToBin (raw, start, end) {\n  raw = '' + raw\n  start = start == null ? 0 : start | 0\n  end = end == null ? raw.length : end | 0\n  let len = end - start\n  let bin = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    bin[i] = raw.charCodeAt(i + start)\n  }\n  return bin\n}\n\n/**\n * @param {Uint8Array} bin\n * @param {number} start\n * @param {number} end\n * @returns {string}\n */\nexport function binToRaw (bin, start, end) {\n  if (!(bin instanceof Uint8Array)) bin = new Uint8Array(bin)\n  start = start == null ? 0 : start | 0\n  end = end == null ? bin.length : end | 0\n  let raw = ''\n  for (let i = start || 0; i < end; i++) {\n    raw += String.fromCharCode(bin[i])\n  }\n  return raw\n}\n\n/**\n * @param {Uint8Array} bin\n * @param {number} start\n * @param {number} end\n * @returns {string}\n */\nexport function binToHex (bin, start, end) {\n  if (!(bin instanceof Uint8Array)) bin = new Uint8Array(bin)\n  start = start == null ? 0 : start | 0\n  end = end == null ? bin.length : end | 0\n  let hex = ''\n  for (let i = start; i < end; i++) {\n    let byte = bin[i]\n    hex += (byte < 0x10 ? '0' : '') + byte.toString(16)\n  }\n  return hex\n}\n\n/**\n * @param {string} hex\n * @param {number} start\n * @param {number} end\n * @returns {Uint8Array}\n */\nexport function hexToBin (hex, start, end) {\n  hex = '' + hex\n  start = start == null ? 0 : start | 0\n  end = end == null ? hex.length : end | 0\n  let len = (end - start) >> 1\n  let bin = new Uint8Array(len)\n  let offset = 0\n  for (let i = start; i < end; i += 2) {\n    bin[offset++] = parseInt(hex.substr(i, 2), 16)\n  }\n  return bin\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function strToRaw (str) {\n  return unescape(encodeURIComponent(str))\n}\n\n/**\n * @param {string} raw\n * @returns {string}\n */\nexport function rawToStr (raw) {\n  return decodeURIComponent(escape(raw))\n}\n\nfunction getCodes () {\n  return 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n}\nlet map\nfunction getMap () {\n  if (map) return map\n  map = []\n  let codes = getCodes()\n  for (let i = 0, l = codes.length; i < l; i++) {\n    map[codes.charCodeAt(i)] = i\n  }\n  return map\n}\n\n// Loop over input 3 bytes at a time\n// a,b,c are 3 x 8-bit numbers\n// they are encoded into groups of 4 x 6-bit numbers\n// aaaaaa aabbbb bbbbcc cccccc\n// if there is no c, then pad the 4th with =\n// if there is also no b then pad the 3rd with =\n/**\n * @param {Uint8Array} bin\n * @returns {string}\n */\nexport function binToB64 (bin) {\n  let b64 = ''\n  let codes = getCodes()\n  for (let i = 0, l = bin.length; i < l; i += 3) {\n    let a = bin[i]\n    let b = i + 1 < l ? bin[i + 1] : -1\n    let c = i + 2 < l ? bin[i + 2] : -1\n    b64 +=\n      // Higher 6 bits of a\n      codes[a >> 2] +\n      // Lower 2 bits of a + high 4 bits of b\n      codes[((a & 3) << 4) | (b >= 0 ? b >> 4 : 0)] +\n      // Low 4 bits of b + High 2 bits of c\n      (b >= 0 ? codes[((b & 15) << 2) | (c >= 0 ? c >> 6 : 0)] : '=') +\n      // Lower 6 bits of c\n      (c >= 0 ? codes[c & 63] : '=')\n  }\n  return b64\n}\n\n// loop over input 4 characters at a time\n// The characters are mapped to 4 x 6-bit integers a,b,c,d\n// They need to be reassembled into 3 x 8-bit bytes\n// aaaaaabb bbbbcccc ccdddddd\n// if d is padding then there is no 3rd byte\n// if c is padding then there is no 2nd byte\n/**\n * @param {string} b64\n * @returns {Uint8Array}\n */\nexport function b64ToBin (b64) {\n  let map = getMap()\n  let bytes = []\n  let j = 0\n  for (let i = 0, l = b64.length; i < l; i += 4) {\n    let a = map[b64.charCodeAt(i)]\n    let b = map[b64.charCodeAt(i + 1)]\n    let c = map[b64.charCodeAt(i + 2)]\n    let d = map[b64.charCodeAt(i + 3)]\n\n    // higher 6 bits are the first char\n    // lower 2 bits are upper 2 bits of second char\n    bytes[j] = (a << 2) | (b >> 4)\n\n    // if the third char is not padding, we have a second byte\n    if (c < 64) {\n      // high 4 bits come from lower 4 bits in b\n      // low 4 bits come from high 4 bits in c\n      bytes[j + 1] = ((b & 0xf) << 4) | (c >> 2)\n\n      // if the fourth char is not padding, we have a third byte\n      if (d < 64) {\n        // Upper 2 bits come from Lower 2 bits of c\n        // Lower 6 bits come from d\n        bytes[j + 2] = ((c & 3) << 6) | d\n      }\n    }\n    j = j + 3\n  }\n  return new Uint8Array(bytes)\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nexport function strToBin (str) {\n  return rawToBin(strToRaw(str))\n}\n\n/**\n * @param {Uint8Array} bin\n * @param {number} [start]\n * @param {number} [end]\n * @returns {string}\n */\nexport function binToStr (bin, start, end) {\n  return rawToStr(binToRaw(bin, start, end))\n}\n\n/**\n * @param {string} raw\n * @param {number} start\n * @param {number} end\n * @returns {string}\n */\nexport function rawToHex (raw, start, end) {\n  return binToHex(rawToBin(raw, start, end))\n}\n\n/**\n * @param {string} hex\n * @returns {string}\n */\nexport function hexToRaw (hex) {\n  return binToRaw(hexToBin(hex))\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function strToHex (str) {\n  return binToHex(strToBin(str))\n}\n\n/**\n * @param {string} hex\n * @returns {string}\n */\nexport function hexToStr (hex) {\n  return binToStr(hexToBin(hex))\n}\n\n/**\n * @param {string} b64\n * @returns {string}\n */\nexport function b64ToStr (b64) {\n  return binToStr(b64ToBin(b64))\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function strToB64 (str) {\n  return binToB64(strToBin(str))\n}\n\n/**\n * @param {string} b64\n * @returns {string}\n */\nexport function b64ToHex (b64) {\n  return binToHex(b64ToBin(b64))\n}\n\n/**\n * @param {string} hex\n * @returns {string}\n */\nexport function hexToB64 (hex) {\n  return binToB64(hexToBin(hex))\n}\n\n/**\n * @param {string} b64\n * @returns {string}\n */\nexport function b64ToRaw (b64) {\n  return binToRaw(b64ToBin(b64))\n}\n\n/**\n * @param {string} raw\n * @param {number} start\n * @param {number} end\n * @returns {string}\n */\nexport function rawToB64 (raw, start, end) {\n  return binToB64(rawToBin(raw, start, end))\n}\n\n// This takes nested lists of numbers, strings and array buffers and returns\n// a single buffer.  Numbers represent single bytes, strings are raw 8-bit\n// strings, and buffers represent themselves.\n// EX:\n//    1           -> <01>\n//    \"Hi\"        -> <48 69>\n//    [1, \"Hi\"]   -> <01 48 69>\n//    [[1],2,[3]] -> <01 02 03>\n/**\n * @param {any} parts\n * @returns {Uint8Array}\n */\nexport function flatten (parts) {\n  if (typeof parts === 'number') return new Uint8Array([parts])\n  if (parts instanceof Uint8Array) return parts\n  let buffer = new Uint8Array(count(parts))\n  copy(buffer, 0, parts)\n  return buffer\n}\n\nfunction count (value) {\n  if (value == null) return 0\n  if (typeof value === 'number') return 1\n  if (typeof value === 'string') return value.length\n  if (value instanceof Uint8Array) return value.length\n  if (!Array.isArray(value)) {\n    console.log('VALUE', value)\n    throw new TypeError('Bad type for flatten: ' + typeof value)\n  }\n  let sum = 0\n  for (let piece of value) {\n    sum += count(piece)\n  }\n  return sum\n}\n\nfunction copy (buffer, offset, value) {\n  if (value == null) return offset\n  if (typeof value === 'number') {\n    buffer[offset++] = value\n    return offset\n  }\n  if (typeof value === 'string') {\n    for (let i = 0, l = value.length; i < l; i++) {\n      buffer[offset++] = value.charCodeAt(i)\n    }\n    return offset\n  }\n  if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value)\n  }\n  for (let piece of value) {\n    offset = copy(buffer, offset, piece)\n  }\n  return offset\n}\n\n/**\n * indexOf for arrays/buffers.  Raw is a string in raw encoding.\n * returns -1 when not found.\n * start and end are indexes into buffer.  Default is 0 and length.\n * @param {Uint8Array} bin\n * @param {string} raw\n * @param {number} start\n * @param {number} end\n * @returns {number}\n */\nexport function indexOf (bin, raw, start, end) {\n  /* eslint-disable no-labels */\n  start = start == null ? 0 : start | 0\n  end = end == null ? bin.length : end | 0\n  outer: for (let i = start || 0; i < end; i++) {\n    for (let j = 0, l = raw.length; j < l; j++) {\n      if (i + j >= end || bin[i + j] !== raw.charCodeAt(j)) {\n        continue outer\n      }\n    }\n    return i\n  }\n  return -1\n}\n\n/**\n * @param {number} num\n * @returns {number}\n */\nexport function uint8 (num) {\n  return (num >>> 0) & 0xff\n}\n\n/**\n * @param {number} num\n * @returns {[number, number]}\n */\nexport function uint16 (num) {\n  num = (num >>> 0) & 0xffff\n  return [\n    num >> 8,\n    num & 0xff\n  ]\n}\n\n/**\n * @param {number} num\n * @returns {[number, number, number, number]}\n */\nexport function uint32 (num) {\n  num >>>= 0\n  return [\n    num >> 24,\n    (num >> 16) & 0xff,\n    (num >> 8) & 0xff,\n    num & 0xff\n  ]\n}\n\n/**\n *\n * @param {number} num\n * @returns {[[number, number, number, number],[number, number, number, number]]}\n */\nexport function uint64 (num) {\n  if (num < 0) num += 0x10000000000000000\n  return [\n    uint32(num / 0x100000000),\n    uint32(num % 0x100000000)\n  ]\n}\n\n// If the first 1 bit of the byte is 0,that character is 1 byte width and this is the byte.\n// If the first 2 bit of the byte is 10,that byte is not the first byte of a character\n// If the first 3 bit is 110,that character is 2 byte width and this is the first byte\n// If the first 4 bit is 1110,that character is 3 byte width and this is the first byte\n// If the first 5 bit is 11110,that character is 4 byte width and this is the first byte\n// If the first 6 bit is 111110,that character is 5 byte width and this is the first byte\n/**\n * @param {Uint8Array} bin\n * @returns {boolean}\n */\nexport function isUTF8 (bin) {\n  let i = 0\n  let l = bin.length\n  while (i < l) {\n    if (bin[i] < 0x80) i++\n    else if (bin[i] < 0xc0) return false\n    else if (bin[i] < 0xe0) i += 2\n    else if (bin[i] < 0xf0) i += 3\n    else if (bin[i] < 0xf8) i += 4\n    else if (bin[i] < 0xfc) i += 5\n  }\n  return i === l\n}\n\n/**\n * @param {Uint8Array} bin\n * @param {number} start\n * @param {number} end\n * @returns {number}\n */\nexport function parseOct (bin, start, end) {\n  let val = 0\n  let sign = 1\n  if (bin[start] === 0x2d) {\n    start++\n    sign = -1\n  }\n  while (start < end) {\n    val = (val << 3) + bin[start++] - 0x30\n  }\n  return sign * val\n}\n\n/**\n * @param {Uint8Array} bin\n * @param {number} start\n * @param {number} end\n * @returns {number}\n */\nexport function parseDec (bin, start, end) {\n  let val = 0\n  let sign = 1\n  if (bin[start] === 0x2d) {\n    start++\n    sign = -1\n  }\n  while (start < end) {\n    val = val * 10 + bin[start++] - 0x30\n  }\n  return sign * val\n}\n","/**\n * lua-style assert helper\n * @param {any} val\n * @param {String} message\n */\nexport function assert (val, message) {\n  if (!val) throw new Error(message || 'Assertion Failed')\n  return val\n}\n","import { indexOf, binToRaw } from './bintools.js'\nimport { assert } from './assert.js'\n\nexport let STATUS_CODES = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing', // RFC 2518, obsoleted by RFC 4918\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '205': 'Reset Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status', // RFC 4918\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Moved Temporarily',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '307': 'Temporary Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Time-out',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Request Entity Too Large',\n  '414': 'Request-URI Too Large',\n  '415': 'Unsupported Media Type',\n  '416': 'Requested Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': \"I'm a teapot\", // RFC 2324\n  '422': 'Unprocessable Entity', // RFC 4918\n  '423': 'Locked', // RFC 4918\n  '424': 'Failed Dependency', // RFC 4918\n  '425': 'Unordered Collection', // RFC 4918\n  '426': 'Upgrade Required', // RFC 2817\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Time-out',\n  '505': 'HTTP Version not supported',\n  '506': 'Variant Also Negotiates', // RFC 2295\n  '507': 'Insufficient Storage', // RFC 4918\n  '509': 'Bandwidth Limit Exceeded',\n  '510': 'Not Extended' // RFC 2774\n}\n\nexport function encoder () {\n  let mode\n\n  function encodeHead (item) {\n    if (!item || item.constructor !== Object) {\n      return item\n    } else if (typeof item !== 'object') {\n      throw new Error(\n        'expected an object but got a ' + (typeof item) + ' when encoding data'\n      )\n    }\n    let head, chunkedEncoding\n    let version = item.version || 1.1\n    if (item.method) {\n      let path = item.path\n      assert(path && path.length > 0, 'expected non-empty path')\n      head = [item.method + ' ' + item.path + ' HTTP/' + version + '\\r\\n']\n    } else {\n      let reason = item.reason || STATUS_CODES[item.code]\n      head = ['HTTP/' + version + ' ' + item.code + ' ' + reason + '\\r\\n']\n    }\n    let headers = item.headers\n    if (Array.isArray(headers)) {\n      for (let i = 0, l = headers.length; i < l; i += 2) {\n        processHeader(headers[i], headers[i + 1])\n      }\n    } else {\n      for (let key in headers) {\n        processHeader(key, headers[key])\n      }\n    }\n    function processHeader (key, value) {\n      let lowerKey = key.toLowerCase()\n      if (lowerKey === 'transfer-encoding') {\n        chunkedEncoding = value.toLowerCase() === 'chunked'\n      }\n      value = ('' + value).replace(/[\\r\\n]+/, ' ')\n      head[head.length] = key + ': ' + value + '\\r\\n'\n    }\n\n    head[head.length] = '\\r\\n'\n\n    mode = chunkedEncoding ? encodeChunked : encodeRaw\n    return head.join('')\n  }\n\n  function encodeRaw (item) {\n    if (typeof item !== 'string') {\n      mode = encodeHead\n      return encodeHead(item)\n    }\n    return item\n  }\n\n  function encodeChunked (item) {\n    if (typeof item !== 'string') {\n      mode = encodeHead\n      let extra = encodeHead(item)\n      if (extra) {\n        return '0\\r\\n\\r\\n' + extra\n      } else {\n        return '0\\r\\n\\r\\n'\n      }\n    }\n    if (item.length === 0) {\n      mode = encodeHead\n    }\n    return item.length.toString(16) + '\\r\\n' + item + '\\r\\n'\n  }\n\n  mode = encodeHead\n  function encode (item) {\n    return mode(item)\n  }\n  return encode\n}\n\nexport function decoder () {\n  // This decoder is somewhat stateful with 5 different parsing states.\n  let mode // state variable that points to various decoders\n  let bytesLeft // For counted decoder\n\n  // This state is for decoding the status line and headers.\n  function decodeHead (chunk, offset) {\n    if (!chunk || chunk.length <= offset) return\n\n    // First make sure we have all the head before continuing\n    let index = indexOf(chunk, '\\r\\n\\r\\n', offset)\n    if (index < 0) {\n      if ((chunk.length - offset) < 8 * 1024) return\n      // But protect against evil clients by refusing heads over 8K long.\n      throw new Error('entity too large')\n    }\n    // Remember where the head ended and the body started\n    let bodyStart = index + 4\n\n    // Parse the status/request line\n    let head = {}\n\n    index = indexOf(chunk, '\\n', offset) + 1\n    let line = binToRaw(chunk, offset, index)\n    let match = line.match(/^HTTP\\/(\\d\\.\\d) (\\d+) ([^\\r\\n]+)/)\n    let version\n    if (match) {\n      version = match[1]\n      head.code = parseInt(match[2], 10)\n      head.reason = match[3]\n    } else {\n      match = line.match(/^([A-Z]+) ([^ ]+) HTTP\\/(\\d\\.\\d)/)\n      if (match) {\n        head.method = match[1]\n        head.path = match[2]\n        version = match[3]\n      } else {\n        throw new Error('expected HTTP data')\n      }\n    }\n    head.version = parseFloat(version)\n    head.keepAlive = head.version > 1.0\n\n    // We need to inspect some headers to know how to parse the body.\n    let contentLength\n    let chunkedEncoding\n\n    let headers = head.headers = []\n    // Parse the header lines\n    let start = index\n    while ((index = indexOf(chunk, '\\n', index) + 1)) {\n      line = binToRaw(chunk, start, index)\n      if (line === '\\r\\n') break\n      start = index\n      let match = line.match(/^([^:\\r\\n]+): *([^\\r\\n]+)/)\n      if (!match) {\n        throw new Error('Malformed HTTP header: ' + line)\n      }\n      let key = match[1]\n      let value = match[2]\n      let lowerKey = key.toLowerCase()\n\n      // Inspect a few headers and remember the values\n      if (lowerKey === 'content-length') {\n        contentLength = parseInt(value)\n      } else if (lowerKey === 'transfer-encoding') {\n        chunkedEncoding = value.toLowerCase() === 'chunked'\n      } else if (lowerKey === 'connection') {\n        head.keepAlive = value.toLowerCase() === 'keep-alive'\n      }\n      headers.push(key, value)\n    }\n\n    if (head.keepAlive\n      ? !(chunkedEncoding || (contentLength !== undefined && contentLength > 0))\n      : (head.method === 'GET' || head.method === 'HEAD')\n    ) {\n      mode = decodeEmpty\n    } else if (chunkedEncoding) {\n      mode = decodeChunked\n    } else if (contentLength !== undefined) {\n      bytesLeft = contentLength\n      mode = decodeCounted\n    } else if (!head.keepAlive) {\n      mode = decodeRaw\n    }\n    return [head, bodyStart]\n  }\n\n  // This is used for inserting a single empty string into the output string for known empty bodies\n  function decodeEmpty (chunk, offset) {\n    mode = decodeHead\n    return [new Uint8Array(0), offset]\n  }\n\n  function decodeRaw (chunk, offset) {\n    if (!chunk || chunk.length >= offset) return [new Uint8Array(0)]\n    if (chunk.length === 0) return\n    return [chunk.slice(offset), chunk.length]\n  }\n\n  function decodeChunked (chunk, offset) {\n    // Make sure we have at least the length header\n    let index = indexOf(chunk, '\\r\\n', offset)\n    if (index < 0) return\n\n    // And parse it\n    let hex = binToRaw(chunk, offset, index)\n    let length = parseInt(hex, 16)\n\n    // Wait till we have the rest of the body\n    let start = hex.length + 2\n    let end = start + length\n    if ((chunk.length - offset) < end + 2) return\n\n    // An empty chunk means end of stream; reset state.\n    if (length === 0) mode = decodeHead\n\n    // Make sure the chunk ends in '\\r\\n'\n    assert(binToRaw(chunk, end, end + 2) === '\\r\\n', 'Invalid chunk tail')\n\n    return [chunk.slice(start, end), end + 2]\n  }\n\n  function decodeCounted (chunk, offset) {\n    if (bytesLeft === 0) {\n      mode = decodeEmpty\n      return mode(chunk, offset)\n    }\n    let length = chunk.length - offset\n    // Make sure we have at least one byte to process\n    if (length <= 0) return\n\n    if (length >= bytesLeft) { mode = decodeEmpty }\n\n    // If the entire chunk fits, pass it all through\n    if (length <= bytesLeft) {\n      bytesLeft -= length\n      return [chunk.slice(offset), chunk.length]\n    }\n\n    return [chunk.slice(offset, bytesLeft), offset + bytesLeft + 1]\n  }\n\n  // Switch between states by changing which decoder mode points to\n  mode = decodeHead\n  function decode (chunk, offset) {\n    return mode(chunk, offset)\n  }\n  return decode\n}\n","\nimport { flatten } from './bintools.js'\nimport { Shutdown, Write } from 'uv'\nimport { assert } from './assert.js'\n\nfunction makeCloser (socket) {\n  let closer = {\n    read: false,\n    written: false,\n    errored: false\n  }\n\n  let closed = false\n\n  function close () {\n    if (closed) return\n    closed = true\n    if (!closer.readClosed) {\n      closer.readClosed = true\n      if (closer.onClose) {\n        closer.onClose()\n      }\n    }\n    socket.close()\n  }\n\n  closer.close = close\n\n  closer.check = function check () {\n    if (closer.errored || (closer.read && closer.written)) {\n      return close()\n    }\n  }\n\n  return closer\n}\n\nexport function makeRead (socket, decode, closer) {\n  // null = not started, true = flowing, false = paused\n  let state = null\n\n  // If writer > reader, there is data to be read.\n  // if reader > writer, there is data required.\n  let queue = []\n  let reader = 0\n  let writer = 0\n\n  let concat = decode.concat || defaultConcat\n\n  function onValue (err, val) {\n    // console.log('<-', err || JSON.stringify(val))\n\n    // If there is a pending writer, give it the data right away.\n    if (reader > writer) {\n      let { resolve, reject } = queue[writer]\n      queue[writer++] = undefined\n      return err ? reject(err) : resolve(val)\n    }\n\n    // Pause the read stream if we're buffering data already.\n    if (state && writer > reader) {\n      state = false\n      // console.log('[[ READ STOP ]]')\n      socket.readStop()\n    }\n\n    // Store the event in the queue waiting for a future reader\n    queue[writer++] = { err, val }\n  }\n\n  closer.onClose = function onClose () {\n    if (!closer.read) {\n      closer.read = true\n      return onValue(closer.errored)\n    }\n  }\n\n  // buffer to store leftover data between decoder calls.\n  let buffer\n\n  function onData (err, array) {\n    if (err) {\n      closer.errored = err\n      return closer.check()\n    }\n    if (!array) {\n      if (closer.read) return\n      closer.read = true\n      onValue()\n      return closer.check()\n    }\n    let chunk = new Uint8Array(array)\n    if (!decode) return onValue(null, chunk)\n    buffer = concat(buffer, chunk)\n    let out\n    let offset = 0\n    while ((out = decode(buffer, offset))) {\n      // console.log('OUT', out)\n      offset = out[1]\n      onValue(null, out[0])\n    }\n    buffer = buffer && buffer.length > offset ? buffer.slice(offset) : null\n    // console.log('Done parsing')\n  }\n\n  async function read () {\n    // If there is pending data, return it right away.\n    if (writer > reader) {\n      let { err, val } = queue[reader]\n      queue[reader++] = undefined\n      if (err) throw err\n      return val\n    }\n\n    // Make sure the data is flowing since we need it.\n    if (!state) {\n      state = true\n      // console.log('[[ READ START]]')\n      socket.readStart(onData)\n    }\n\n    // Wait for the data or a parse error.\n    return new Promise(function (resolve, reject) {\n      queue[reader++] = { resolve, reject }\n    })\n  }\n\n  read.updateDecode = (newDecode) => {\n    decode = newDecode\n    concat = decode.concat || defaultConcat\n  }\n\n  return read\n}\n\nfunction makeWrite (socket, encode, closer) {\n  async function write (value) {\n    if (closer.written) {\n      throw new Error('Already shutdown')\n    }\n\n    // console.log('->', JSON.stringify(value))\n\n    if (encode) value = encode(value)\n\n    return new Promise((resolve, reject) => {\n      if (value != null) {\n        socket.write(\n          new Write(),\n          flatten(value).buffer,\n          err => err ? reject(err) : resolve()\n        )\n      } else {\n        socket.shutdown(new Shutdown(), err => {\n          if (err) closer.errored = err\n          closer.written = true\n          closer.check()\n          err ? reject(err) : resolve()\n        })\n      }\n    })\n  }\n\n  write.updateEncode = function (newEncode) {\n    encode = newEncode\n  }\n\n  return write\n}\n\nexport function wrapRead (socket, decode) {\n  let closer = makeCloser(socket)\n  closer.written = true\n  let read = makeRead(socket, decode, closer)\n  read.close = closer.close\n  return read\n}\n\nexport function wrapWrite (socket, encode) {\n  let closer = makeCloser(socket)\n  closer.read = true\n  let write = makeWrite(socket, encode, closer)\n  write.close = closer.close\n  return write\n}\n\nexport function wrapStream (socket, { decode, encode }) {\n  assert(socket && socket.write && socket.shutdown && socket.readStart && socket.readStop && socket.close, 'Missing stream functions')\n  let closer = makeCloser(socket)\n  let read = makeRead(socket, decode, closer)\n  let write = makeWrite(socket, encode, closer)\n  read.close = closer.close\n  write.close = closer.close\n  return { read, write }\n}\n\nfunction defaultConcat (buffer, chunk) {\n  return (buffer && buffer.length) ? flatten([buffer, chunk]) : chunk\n}\n","import { connect } from './tcp.js';\nimport { Headers, Response } from './fetch.js';\nimport { decoder, encoder } from './weblit-js/libs/http-codec.js';\nimport { wrapStream } from './weblit-js/libs/gen-channel.js';\n\n/**\n * Perform an HTTP Request\n * @param {Request} req\n * @returns {Response}\n */\nexport async function httpRequest (req) {\n  let { host, port, hostname, pathname } = req.meta;\n  let socket = await connect(host, port);\n  let { read, write } = wrapStream(socket, {\n    encode: encoder(),\n    decode: decoder()\n  });\n\n  req.headers.set('Host', hostname);\n  req.headers.set('Connection', 'close');\n  req.headers.set('User-Agent', 'MagicScript');\n\n  let headers = [];\n  for (let [key, value] of req.headers) {\n    headers.push(key, value);\n  }\n\n  await write({\n    method: req.method,\n    path: pathname,\n    headers\n  });\n  if (req.body) {\n    throw new Error('TODO: implement request bodies');\n  }\n  await write('');\n\n  let res = await read();\n\n  async function next () {\n    let part = await read();\n    if (!part || part.length === 0) return { done: true };\n    await write();\n    return {\n      done: false, value: part\n    };\n  }\n  let body = { [Symbol.asyncIterator] () { return this; }, next };\n  let resHeaders = new Headers();\n  for (let i = 0, l = res.headers.length; i < l; i += 2) {\n    resHeaders.set(res.headers[i], res.headers[i + 1]);\n  }\n  return new Response(body, {\n    status: res.code,\n    statusText: res.reason,\n    url: req.url,\n    headers: resHeaders\n  });\n}\n","// A simple mime database.\nlet types\n\nexport let defaultBinary = 'application/octet-stream'\nexport let defaultText = 'text/plain'\n\nexport function guess (path, isText) {\n  path = path.toLowerCase().trim()\n  var index = path.lastIndexOf('/')\n  if (index >= 0) {\n    path = path.substr(index + 1)\n  }\n  index = path.lastIndexOf('.')\n  if (index >= 0) {\n    path = path.substr(index + 1)\n  }\n  return types[path] || ((isText && isText()) ? defaultText : defaultBinary)\n}\n\n// Borrowed and passed around from who knows where, last grabbed from connect.\ntypes = {\n  '3gp': 'video/3gpp',\n  a: 'application/octet-stream',\n  ai: 'application/postscript',\n  aif: 'audio/x-aiff',\n  aiff: 'audio/x-aiff',\n  asc: 'application/pgp-signature',\n  asf: 'video/x-ms-asf',\n  asm: 'text/x-asm',\n  asx: 'video/x-ms-asf',\n  atom: 'application/atom+xml',\n  au: 'audio/basic',\n  avi: 'video/x-msvideo',\n  bat: 'application/x-msdownload',\n  bin: 'application/octet-stream',\n  bmp: 'image/bmp',\n  bz2: 'application/x-bzip2',\n  c: 'text/x-csrc',\n  cab: 'application/vnd.ms-cab-compressed',\n  can: 'application/candor',\n  cc: 'text/x-c++src',\n  chm: 'application/vnd.ms-htmlhelp',\n  'class': 'application/octet-stream',\n  com: 'application/x-msdownload',\n  conf: 'text/plain',\n  cpp: 'text/x-c',\n  crt: 'application/x-x509-ca-cert',\n  css: 'text/css',\n  csv: 'text/csv',\n  cxx: 'text/x-c',\n  deb: 'application/x-debian-package',\n  der: 'application/x-x509-ca-cert',\n  diff: 'text/x-diff',\n  djv: 'image/vnd.djvu',\n  djvu: 'image/vnd.djvu',\n  dll: 'application/x-msdownload',\n  dmg: 'application/octet-stream',\n  doc: 'application/msword',\n  dot: 'application/msword',\n  dtd: 'application/xml-dtd',\n  dvi: 'application/x-dvi',\n  ear: 'application/java-archive',\n  eml: 'message/rfc822',\n  eps: 'application/postscript',\n  exe: 'application/x-msdownload',\n  f: 'text/x-fortran',\n  f77: 'text/x-fortran',\n  f90: 'text/x-fortran',\n  flv: 'video/x-flv',\n  'for': 'text/x-fortran',\n  gem: 'application/octet-stream',\n  gemspec: 'text/x-script.ruby',\n  gif: 'image/gif',\n  gyp: 'text/x-script.python',\n  gypi: 'text/x-script.python',\n  gz: 'application/x-gzip',\n  h: 'text/x-chdr',\n  hh: 'text/x-c++hdr',\n  htm: 'text/html',\n  html: 'text/html',\n  ico: 'image/vnd.microsoft.icon',\n  ics: 'text/calendar',\n  ifb: 'text/calendar',\n  iso: 'application/octet-stream',\n  jar: 'application/java-archive',\n  java: 'text/x-java-source',\n  jnlp: 'application/x-java-jnlp-file',\n  jpeg: 'image/jpeg',\n  jpg: 'image/jpeg',\n  js: 'application/javascript',\n  json: 'application/json',\n  less: 'text/css',\n  log: 'text/plain',\n  lua: 'text/x-script.lua',\n  luac: 'application/x-bytecode.lua',\n  makefile: 'text/x-makefile',\n  appcache: 'text/cache-manifest',\n  m3u: 'audio/x-mpegurl',\n  m4v: 'video/mp4',\n  man: 'text/troff',\n  manifest: 'text/cache-manifest',\n  markdown: 'text/x-markdown',\n  mathml: 'application/mathml+xml',\n  mbox: 'application/mbox',\n  mdoc: 'text/troff',\n  md: 'text/x-markdown',\n  me: 'text/troff',\n  mid: 'audio/midi',\n  midi: 'audio/midi',\n  mime: 'message/rfc822',\n  mml: 'application/mathml+xml',\n  mng: 'video/x-mng',\n  mov: 'video/quicktime',\n  mp3: 'audio/mpeg',\n  mp4: 'video/mp4',\n  mp4v: 'video/mp4',\n  mpeg: 'video/mpeg',\n  mpg: 'video/mpeg',\n  ms: 'text/troff',\n  msi: 'application/x-msdownload',\n  odp: 'application/vnd.oasis.opendocument.presentation',\n  ods: 'application/vnd.oasis.opendocument.spreadsheet',\n  odt: 'application/vnd.oasis.opendocument.text',\n  ogg: 'application/ogg',\n  p: 'text/x-pascal',\n  pas: 'text/x-pascal',\n  pbm: 'image/x-portable-bitmap',\n  pdf: 'application/pdf',\n  pem: 'application/x-x509-ca-cert',\n  pgm: 'image/x-portable-graymap',\n  pgp: 'application/pgp-encrypted',\n  pkg: 'application/octet-stream',\n  pl: 'text/x-script.perl',\n  pm: 'text/x-script.perl-module',\n  png: 'image/png',\n  pnm: 'image/x-portable-anymap',\n  ppm: 'image/x-portable-pixmap',\n  pps: 'application/vnd.ms-powerpoint',\n  ppt: 'application/vnd.ms-powerpoint',\n  ps: 'application/postscript',\n  psd: 'image/vnd.adobe.photoshop',\n  py: 'text/x-script.python',\n  qt: 'video/quicktime',\n  ra: 'audio/x-pn-realaudio',\n  rake: 'text/x-script.ruby',\n  ram: 'audio/x-pn-realaudio',\n  rar: 'application/x-rar-compressed',\n  rb: 'text/x-script.ruby',\n  rdf: 'application/rdf+xml',\n  roff: 'text/troff',\n  rpm: 'application/x-redhat-package-manager',\n  rss: 'application/rss+xml',\n  rtf: 'application/rtf',\n  ru: 'text/x-script.ruby',\n  s: 'text/x-asm',\n  sgm: 'text/sgml',\n  sgml: 'text/sgml',\n  sh: 'application/x-sh',\n  sig: 'application/pgp-signature',\n  snd: 'audio/basic',\n  so: 'application/octet-stream',\n  svg: 'image/svg+xml',\n  svgz: 'image/svg+xml',\n  swf: 'application/x-shockwave-flash',\n  t: 'text/troff',\n  tar: 'application/x-tar',\n  tbz: 'application/x-bzip-compressed-tar',\n  tci: 'application/x-topcloud',\n  tcl: 'application/x-tcl',\n  tex: 'application/x-tex',\n  texi: 'application/x-texinfo',\n  texinfo: 'application/x-texinfo',\n  text: 'text/plain',\n  tif: 'image/tiff',\n  tiff: 'image/tiff',\n  torrent: 'application/x-bittorrent',\n  tr: 'text/troff',\n  ts: 'application/x-typescript',\n  ttf: 'application/x-font-ttf',\n  txt: 'text/plain',\n  vcf: 'text/x-vcard',\n  vcs: 'text/x-vcalendar',\n  vrml: 'model/vrml',\n  war: 'application/java-archive',\n  wav: 'audio/x-wav',\n  webapp: 'application/x-web-app-manifest+json',\n  webm: 'video/webm',\n  wma: 'audio/x-ms-wma',\n  wmv: 'video/x-ms-wmv',\n  wmx: 'video/x-ms-wmx',\n  wrl: 'model/vrml',\n  wsdl: 'application/wsdl+xml',\n  xbm: 'image/x-xbitmap',\n  xhtml: 'application/xhtml+xml',\n  xls: 'application/vnd.ms-excel',\n  xml: 'application/xml',\n  xpm: 'image/x-xpixmap',\n  xsl: 'application/xml',\n  xslt: 'application/xslt+xml',\n  yaml: 'text/yaml',\n  yml: 'text/yaml',\n  zip: 'application/zip'\n}\n","/// <reference path=\"../lib.uv.d.ts\"/>\nimport { Fs, fs } from 'uv';\nimport { Response } from './fetch.js';\nimport { guess } from './weblit-js/libs/mime.js';\n\nexport function readFileStream (path, offset = 0, end = -1) {\n  let { open, read, close } = fs;\n  let fd;\n  let buf = new Uint8Array(256 * 512);\n  let queue = [];\n  let reads = 0;\n  let writes = 0;\n  let reading = false;\n\n  return new Promise((resolve, reject) =>\n    open(new Fs(), path, 0, 0, (err, value) =>\n      err ? reject(err)\n        : ((fd = value),\n        resolve({\n          [Symbol.asyncIterator] () { return this; },\n          next\n        }))\n    )\n  );\n\n  function next () {\n    return new Promise((resolve, reject) => {\n      if (writes > reads) {\n        let { error, result } = queue[reads];\n        queue[reads++] = null;\n        return error ? reject(error) : resolve(result);\n      }\n      queue[reads++] = { resolve, reject };\n      reading = true;\n      pull();\n    });\n  }\n\n  function push ({ error, result }) {\n    if (reads > writes) {\n      let { resolve, reject } = queue[writes];\n      queue[writes++] = null;\n      return error ? reject(error) : resolve(result);\n    }\n    queue[writes++] = { error, result };\n    if (writes > reads) reading = false;\n  }\n\n  function pull () {\n    if (!reading) return;\n    read(new Fs(), fd, buf.buffer, offset, onRead);\n  }\n\n  function onRead (err, bytesRead) {\n    if (err) return push({ error: err });\n    if (end >= 0 && bytesRead > end - offset) {\n      bytesRead = end - offset;\n    }\n    if (bytesRead > 0) {\n      offset += bytesRead;\n      push({ result: { done: false, value: buf.slice(0, bytesRead) } });\n      pull();\n    } else {\n      push({ result: { done: true } });\n      close(new Fs(), fd);\n    }\n  }\n}\n\n/**\n * Load a local file as if it was an HTTP request.\n * @param {Request} req\n * @returns {Response}\n */\nexport async function fileRequest (req) {\n  let body = await readFileStream(req.meta.path);\n  return new Response(body, { headers: {\n    'Content-Type': guess(req.meta.path),\n  }});\n}\n","let mapKey = Symbol('HeaderMapKey');\nexport class Headers {\n  constructor (init = {}) {\n    Object.defineProperty(this, mapKey, { value: {} });\n    for (let key in init) {\n      this.set(key, init[key]);\n    }\n  }\n  append (name, value) {\n    let key = this[mapKey][name.toLowerCase()];\n    if (!key) {\n      key = this[mapKey][name.toLowerCase()] = name;\n      this[key] = '' + value;\n    } else {\n      this[key] += ', ' + value;\n    }\n  }\n  delete (name) {\n    let lower = name.toLowerCase();\n    let key = this[mapKey][lower];\n    if (key) {\n      delete this[mapKey][lower];\n      delete this[key];\n    }\n  }\n  get (name) {\n    return this[this[mapKey][name.toLowerCase()]] || null;\n  }\n  has (name) {\n    return !!this[mapKey][name.toLowerCase()];\n  }\n  set (name, value) {\n    let key = this[mapKey][name.toLowerCase()];\n    if (!key) {\n      key = this[mapKey][name.toLowerCase()] = name;\n    }\n    this[key] = '' + value;\n  }\n  forEach (callbackfn, thisArg) {\n    for (let [key, value] of this) {\n      callbackfn.call(thisArg, value, key, this);\n    }\n  }\n  [Symbol.iterator] () {\n    return this.entries();\n  }\n  entries () {\n    let map = (key) => [key, this[key]];\n    return Object.keys(this).map(map)[Symbol.iterator]();\n  }\n  keys () {\n    return Object.keys(this)[Symbol.iterator]();\n  }\n  values () {\n    return Object.keys(this).map(key => this[key])[Symbol.iterator]();\n  }\n}\n","import { httpRequest } from './fetch-http.js';\nimport { fileRequest } from './fetch-file.js';\nimport { Headers } from './headers.js';\nexport { Headers };\n\nexport let fetch = makeFetch({\n  file: fileRequest,\n  http: httpRequest\n});\n\nexport function makeFetch(protocols) {\n  return async function fetch(input, init) {\n    let req;\n    if (input instanceof Request) {\n      // TODO: should we apply `init` to the request?\n      req = input;\n    } else {\n      req = new Request(input, init);\n    }\n    let protocol = req.meta.protocol;\n    let handler = protocols[protocol];\n    if (handler) return handler(req);\n    if (protocol === 'https') throw new Error('TODO: Implement TLS for HTTPS clients');\n  };\n}\n\n\nexport class Response {\n  constructor(body, init = {}) {\n    let status = init.status || 200;\n    let statusText = init.statusText || 'OK';\n    let headers = new Headers(init.headers);\n    let url = init.url;\n    Object.defineProperties(this, {\n      url: { value: url, enumerable: true, writable: false },\n      body: { value: body, enumerable: true, writable: false },\n      status: { value: status, enumerable: true, writable: false },\n      statusText: { value: statusText, enumerable: true, writable: false },\n      headers: { value: headers, enumerable: true, writable: false }\n    });\n  }\n\n  async arrayBuffer() {\n    return consume(this.body);\n  }\n\n  async text() {\n    return binToStr(await consume(this.body));\n  }\n\n  async json() {\n    return JSON.parse(binToStr(await consume(this.body)));\n  }\n\n  get ok() {\n    return this.status >= 200 && this.status < 300;\n  }\n}\n\nasync function consume(stream) {\n  let total = 0;\n  let parts = [];\n  for await (let part of stream) {\n    total += part.byteLength;\n    parts.push(part);\n  }\n  let array = new Uint8Array(total);\n  let offset = 0;\n  for (let part of parts) {\n    array.set(new Uint8Array(part), offset);\n    offset += part.byteLength;\n  }\n  return array.buffer;\n}\n\nfunction binToStr(bin) {\n  let array = new Uint8Array(bin);\n  let end = array.length;\n  let raw = '';\n  for (let i = 0; i < end; i++) {\n    raw += String.fromCharCode(array[i]);\n  }\n  // UTF8 decode\n  return decodeURIComponent(escape(raw));\n}\n\nexport class Request {\n  constructor(input, init = {}) {\n    let [url, meta] = normalizeUrl(input);\n    let method = init.method || 'GET';\n    let headers = new Headers(init.headers);\n    let body = init.body;\n    Object.defineProperties(this, {\n      meta: { value: meta, writable: false },\n      url: { value: url, enumerable: true, writable: false },\n      method: { value: method, enumerable: true, writable: false },\n      headers: { value: headers, enumerable: true, writable: false },\n      body: { value: body, enumerable: true, writable: false }\n    });\n  }\n}\n\nfunction pathJoin(base, ...inputs) {\n  let segments = [];\n  for (let part of (base + '/' + inputs.join('/')).split(/\\/+/)) {\n    if (part === '' || part === '.') continue;\n    if (part === '..') {\n      segments.pop();\n      continue;\n    }\n    segments.push(part);\n  }\n  return (base[0] === '/' ? '/' : '') + segments.join('/');\n}\n\nfunction normalizeUrl(input) {\n  if (typeof input !== 'string') { throw new TypeError('Input must be string'); }\n  let match = input.match(/^([a-z]+):/);\n  let protocol;\n\n  if (!match) {\n    protocol = 'file';\n    if (input[0] === '/') {\n      input = `file:/${input}`;\n    } else {\n      input = `file://${getCaller()}/../${input}`;\n    }\n  } else {\n    protocol = match[1];\n  }\n\n  if (protocol === 'http' || protocol === 'https') {\n    match = input.match(/^https?:\\/\\/([^:/]+)(:[0-9]+)?(\\/[^?#]*)?([?][^#]*)?(#.*)?$/);\n    if (!match) {\n      throw new TypeError(`Invalid ${protocol} url: '${input}'`);\n    }\n    let [, host, portStr, path, query, hash] = match;\n    path = pathJoin('/', path);\n    let defaultPort = protocol === 'http' ? 80 : 443;\n    let port = portStr ? parseInt(portStr.substr(1), 10) : defaultPort;\n    let hostname = `${host}${port === defaultPort ? '' : ':' + port}`;\n    let pathname = `${path}${query || ''}`;\n    let url = `${protocol}://${hostname}${pathname}${query || ''}${hash || ''}`;\n    return [url, { protocol, host, port, path, query, hash, hostname, pathname }];\n  }\n\n  if (protocol === 'file') {\n    match = input.match(/^file:\\/\\/([^?#]+)([?][^#]*)?(#.*)?$/);\n    if (!match) {\n      throw new TypeError(`Invalid ${protocol} url: '${input}'`);\n    }\n    let [, path, query, hash] = match;\n    path = pathJoin(path);\n    let url = `${protocol}://${path}${query || ''}`;\n    return [url, { protocol, path, query, hash }];\n  }\n  throw new TypeError(`Unsupported protocol: '${protocol}'`);\n}\n\n// Use the V8 Stack Trace API to find the filename of the caller outside this file.\nfunction getCaller() {\n  let old = Error.prepareStackTrace;\n  Error.prepareStackTrace = findCaller;\n  let caller = new Error().stack;\n  Error.prepareStackTrace = old;\n  return caller;\n}\n\nfunction findCaller(_, stack) {\n  // Skip down the stack till get leave this file.\n  let self = stack[0].getFileName();\n  let other;\n  for (let frame of stack) {\n    let entry = frame.getFileName();\n    if (entry !== self) {\n      other = entry;\n      break;\n    }\n  }\n  return other || self;\n}\n","// Re-export all polyfilled web builtins\nexport {\n  setTimeout,\n  clearTimeout,\n  setInterval,\n  clearInterval,\n  setImmediate,\n  clearImmediate\n} from './timers';\nexport { fetch, Headers, Request, Response } from './fetch.js';\n","// Also place on globalThis\nimport {\n  setTimeout,\n  clearTimeout,\n  setInterval,\n  clearInterval,\n  setImmediate,\n  clearImmediate,\n  fetch,\n  Headers,\n  Request,\n  Response\n} from './index.js';\n\nglobalThis.setTimeout = setTimeout;\nglobalThis.clearTimeout = clearTimeout;\nglobalThis.setInterval = setInterval;\nglobalThis.clearInterval = clearInterval;\nglobalThis.setImmediate = setImmediate;\nglobalThis.clearImmediate = clearImmediate;\nglobalThis.fetch = fetch;\nglobalThis.Headers = Headers;\nglobalThis.Request = Request;\nglobalThis.Response = Response;\n"],"names":["binToStr"],"mappings":"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"}